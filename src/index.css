body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
}

/*
code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}




function App(props) {
  const [input, setInput] = useState({ name: "", profession: "", age: "" });
  const [item, setItem] = useState([]);
  const [deleteItem, setDeleteItem] = useState("");
  const [editID, setEditID] = useState();
  const [update, setUpdate] = useState(false);
  const [modal, setModal] = useState(false);

  const backdrop = useRef();

  async function getDB() {
    const res = await axios.get(
      "https://react-http-7341c-default-rtdb.firebaseio.com/users.json"
    );
    const allData = res.data;
    let temp = [];
    for (const key in allData) {
      temp.push({
        id: allData[key].id,
        name: allData[key].name,
        profession: allData[key].profession,
        age: allData[key].age,
        parentId: key,
      });
    }
    setItem(temp);
  }
  useEffect(() => {
    getDB();
  }, []);

  const deleteItems = async (id) => {
    try {
      await axios.delete(
        `https://react-http-7341c-default-rtdb.firebaseio.com/users/${id}.json`
      );
      getDB();
      setModal(false);
    } catch (error) {}
  };
  const SubmitAddHandler = async (e) => {
    e.preventDefault();

    const data = {
      name: input.name,
      profession: input.profession,
      age: input.age,
    };
    try {
      await axios.post(
        `https://react-http-7341c-default-rtdb.firebaseio.com/users.json`,
        JSON.stringify(data),
        {
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
    } catch (error) {}
    getDB();
    setItem([...item, data]);
    setInput({ name: "", profession: "", age: "" });
  };

  const handleUpdateSubmit = async (e) => {
    const data = {
      name: input.name,
      profession: input.profession,
      age: input.age,
    };
    e.preventDefault();
    try {
      await axios.put(
        `https://react-http-7341c-default-rtdb.firebaseio.com/users/${editID}.json`,
        JSON.stringify(data),
        {
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
    } catch (error) {}
    getDB();
    setItem([...item, data]);
    setInput({ name: "", profession: "", age: "" });
    setUpdate(false);
  }; */
